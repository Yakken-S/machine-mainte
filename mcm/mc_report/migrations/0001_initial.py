# Generated by Django 4.2.4 on 2023-09-06 00:02

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Alarm',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('alarm_num', models.CharField(max_length=10)),
                ('alarm_name', models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='L1_Name',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('l1_name', models.CharField(max_length=10, unique=True)),
                ('machine_name', models.CharField(max_length=20)),
                ('machine_type', models.CharField(max_length=10)),
                ('machine_image', models.FileField(blank=True, upload_to='')),
                ('machine_status', models.CharField(blank=True, choices=[('01', '正常'), ('02', '修理中/稼働可能'), ('03', '修理中/稼働不可')], max_length=20)),
                ('created_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='created_id_l1_name', to=settings.AUTH_USER_MODEL)),
                ('updated_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='updated_id_l1_name', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Issue_History',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('issue_type', models.CharField(blank=True, choices=[('01', '機械不具合'), ('02', '電気不具合'), ('03', 'システム不具合'), ('04', '加工精度不良')], max_length=20)),
                ('issue_title', models.TextField()),
                ('issue_detail', models.TextField()),
                ('issue_treatment', models.TextField()),
                ('issue_freeinput', models.TextField()),
                ('issue_datetime', models.DateTimeField(default=django.utils.timezone.now)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('file_quotation', models.FileField(blank=True, upload_to='')),
                ('file_report', models.FileField(blank=True, upload_to='')),
                ('file_image1', models.FileField(blank=True, upload_to='')),
                ('file_image2', models.FileField(blank=True, upload_to='')),
                ('alarm_num', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='alarm_nums_issue', to='mc_report.alarm')),
                ('created_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='created_l1_name_issue', to=settings.AUTH_USER_MODEL)),
                ('l1_name', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='l1_name_issue', to='mc_report.l1_name')),
                ('updated_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='updated_l1_name_issue', to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
